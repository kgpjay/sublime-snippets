<snippet>
	<content><![CDATA[
class TRIE{
public: 
    class trie_node{
    public:
        char value;  //node value 
        int cnt=0;   //number of times this node is requested to added
        bool end;    //weather a word ends at this node 
        vector<trie_node*> next;   //pointer to next nodes 
         
        trie_node(char c){
            value = c;
            cnt=1; 
            next = vector<trie_node*>(50, NULL);
            end = 0;
        }
    };
    trie_node* head;  //creating one head pointer 

    TRIE(){
        head = new trie_node('#'); 
    }
    void insert(string s){  //insert a string 
        trie_node* node = head; 
        for(auto c : s){
            if(node->next[c-'a']==NULL){
                trie_node* tnode = new trie_node(c);  //new node with charachter c 
                node->next[c-'a'] = tnode;  //connecting new node 
                node = tnode; 
            }
            else{
                node = node->next[c-'a']; 
                node->cnt++; 
            }
        }
        node->end = 1; 
    }
    int find(string s){
        int ans=2; 

        trie_node* node = head; 
        for(auto c : s){
            if(node->next[c-'a']==NULL) return 0; 
            else{
                node = node->next[c-'a']; 
                if(node->cnt==1) ans=1;  // this means if the word exist then inserted ones 
            }
        }
        if(node->end == 1) return ans; 
        else return 0; 
        /*
        so return 
        0 not found 
        1 found but inserted only ones,
        2 found and present many times, i:e prefix of another of same was inserted */
    }

};




]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>trie</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
